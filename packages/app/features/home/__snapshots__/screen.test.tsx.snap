// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen 1`] = `
[
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "paddingBottom": 18,
        "paddingLeft": 18,
        "paddingRight": 18,
        "paddingTop": 18,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "maxWidth": 600,
        }
      }
    >
      <Text
        accessibilityRole="header"
        selectable={true}
        style={
          {
            "color": "#fff",
            "fontFamily": "InterBold",
            "fontSize": 46,
            "letterSpacing": -3,
            "lineHeight": 56,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "textAlign": "center",
            "textTransform": "none",
          }
        }
        suppressHighlighting={true}
      >
        Welcome to Tamagui.
      </Text>
      <View
        pointerEvents="none"
        style={
          {
            "alignItems": "stretch",
            "height": 18,
            "minHeight": 18,
            "minWidth": 18,
            "width": 18,
          }
        }
      />
      <Text
        selectable={true}
        style={
          {
            "color": "#fff",
            "fontFamily": "Inter",
            "fontSize": 15,
            "letterSpacing": 0,
            "lineHeight": 27,
            "textAlign": "center",
          }
        }
        suppressHighlighting={true}
      >
        Here's a basic starter to show navigating from one screen to another. This screen uses the same code on Next.js and React Native.
      </Text>
      <View
        pointerEvents="none"
        style={
          {
            "alignItems": "stretch",
            "height": 18,
            "minHeight": 18,
            "minWidth": 18,
            "width": 18,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "stretch",
            "borderBottomColor": "#282828",
            "borderBottomWidth": 1,
            "borderLeftColor": "#282828",
            "borderLeftWidth": 0,
            "borderRightColor": "#282828",
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopColor": "#282828",
            "borderTopWidth": 0,
            "flex": 1,
            "flexShrink": 0,
            "height": 0,
            "maxHeight": 0,
            "transform": [
              {
                "translateY": -0.5,
              },
            ],
          }
        }
      />
      <View
        pointerEvents="none"
        style={
          {
            "alignItems": "stretch",
            "height": 18,
            "minHeight": 18,
            "minWidth": 18,
            "width": 18,
          }
        }
      />
      <Text
        selectable={true}
        style={
          {
            "color": "#fff",
            "fontFamily": "Inter",
            "fontSize": 15,
            "letterSpacing": 0,
            "lineHeight": 27,
            "textAlign": "center",
          }
        }
        suppressHighlighting={true}
      >
        Made by
         
        <Text
          accessibilityRole="link"
          cancelable={true}
          focusable={true}
          minPressDuration={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          style={
            {
              "color": "#fff",
              "fontFamily": "Inter",
              "fontSize": 15,
              "letterSpacing": 0,
              "lineHeight": 27,
            }
          }
          suppressHighlighting={true}
        >
          @natebirdman
        </Text>
        ,
         
        <Text
          accessibilityRole="link"
          cancelable={true}
          focusable={true}
          minPressDuration={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          rel="noreferrer"
          style={
            {
              "color": "#fff",
              "fontFamily": "Inter",
              "fontSize": 15,
              "letterSpacing": 0,
              "lineHeight": 27,
            }
          }
          suppressHighlighting={true}
        >
          give it a ⭐️
        </Text>
      </Text>
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "alignItems": "stretch",
          "height": 18,
          "minHeight": 18,
          "minWidth": 18,
          "width": 18,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "stretch",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityRole="link"
        cancelable={true}
        cursor="pointer"
        focusable={[Function]}
        href="/user/nate"
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#232323",
            "borderBottomColor": "transparent",
            "borderBottomLeftRadius": 9,
            "borderBottomRightRadius": 9,
            "borderBottomWidth": 1,
            "borderLeftColor": "transparent",
            "borderLeftWidth": 1,
            "borderRightColor": "transparent",
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": "transparent",
            "borderTopLeftRadius": 9,
            "borderTopRightRadius": 9,
            "borderTopWidth": 1,
            "flexDirection": "row",
            "flexWrap": "nowrap",
            "height": 44,
            "justifyContent": "center",
            "paddingLeft": 18,
            "paddingRight": 18,
          }
        }
      >
        <Text
          cursor="pointer"
          lineBreakMode="clip"
          numberOfLines={1}
          style={
            {
              "color": "#fff",
              "flexGrow": 0,
              "flexShrink": 1,
              "fontFamily": "Inter",
              "fontSize": 15,
              "letterSpacing": 0,
              "lineHeight": 27,
            }
          }
          suppressHighlighting={true}
          userSelect="none"
        >
          Link to user
        </Text>
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        {
          "alignItems": "stretch",
          "height": 18,
          "minHeight": 18,
          "minWidth": 18,
          "width": 18,
        }
      }
    />
    <View
      accessibilityRole="button"
      cancelable={true}
      cursor="pointer"
      focusable={[Function]}
      minPressDuration={0}
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onPress={[Function]}
      onPressIn={[Function]}
      onPressOut={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#232323",
          "borderBottomColor": "transparent",
          "borderBottomLeftRadius": 100000,
          "borderBottomRightRadius": 100000,
          "borderBottomWidth": 1,
          "borderLeftColor": "transparent",
          "borderLeftWidth": 1,
          "borderRightColor": "transparent",
          "borderRightWidth": 1,
          "borderStyle": "solid",
          "borderTopColor": "transparent",
          "borderTopLeftRadius": 100000,
          "borderTopRightRadius": 100000,
          "borderTopWidth": 1,
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "height": 64,
          "justifyContent": "center",
          "maxHeight": 64,
          "maxWidth": 64,
          "minHeight": 64,
          "minWidth": 64,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": 64,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="20"
        bbWidth="20"
        fill="none"
        focusable={false}
        height={20}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="#fff"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {},
            {
              "flex": 0,
              "height": 20,
              "width": 20,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={20}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4294967295,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGPath
            d="m18 15-6-6-6 6"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
              ]
            }
            stroke={
              {
                "payload": 4294967295,
                "type": 0,
              }
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      {
        "alignItems": "stretch",
        "bottom": 0,
        "flexDirection": "column",
        "left": 0,
        "maxWidth": "100%",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 100001,
      }
    }
  >
    <View
      animation="medium"
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        {
          "height": "80%",
          "minHeight": "80%",
          "opacity": 0,
          "position": "absolute",
          "transform": [
            {
              "translateY": 10000.1,
            },
          ],
          "width": "100%",
          "zIndex": 100001,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#151515",
            "borderTopLeftRadius": 9,
            "borderTopRightRadius": 9,
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "maxHeight": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          cancelable={true}
          focusable={true}
          minPressDuration={0}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          pointerEvents="none"
          style={
            {
              "alignItems": "stretch",
              "backgroundColor": "#151515",
              "borderBottomLeftRadius": 100,
              "borderBottomRightRadius": 100,
              "borderTopLeftRadius": 100,
              "borderTopRightRadius": 100,
              "flexDirection": "row",
              "height": 10,
              "marginBottom": 7,
              "marginLeft": "35%",
              "marginRight": "35%",
              "opacity": 0,
              "zIndex": 10,
            }
          }
        />
        <View
          accessibilityRole="button"
          cancelable={true}
          cursor="pointer"
          focusable={[Function]}
          minPressDuration={0}
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPress={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#232323",
              "borderBottomColor": "transparent",
              "borderBottomLeftRadius": 100000,
              "borderBottomRightRadius": 100000,
              "borderBottomWidth": 1,
              "borderLeftColor": "transparent",
              "borderLeftWidth": 1,
              "borderRightColor": "transparent",
              "borderRightWidth": 1,
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderTopLeftRadius": 100000,
              "borderTopRightRadius": 100000,
              "borderTopWidth": 1,
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "height": 64,
              "justifyContent": "center",
              "maxHeight": 64,
              "maxWidth": 64,
              "minHeight": 64,
              "minWidth": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
              "width": 64,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="20"
            bbWidth="20"
            fill="none"
            focusable={false}
            height={20}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke="#fff"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {},
                {
                  "flex": 0,
                  "height": 20,
                  "width": 20,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={20}
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              stroke={
                {
                  "payload": 4294967295,
                  "type": 0,
                }
              }
              strokeLinecap={1}
              strokeLinejoin={1}
              strokeWidth="2"
            >
              <RNSVGPath
                d="m6 9 6 6 6-6"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                  ]
                }
                stroke={
                  {
                    "payload": 4294967295,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#151515",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0,
            "bottom": "-50%",
            "flex": 1,
            "flexDirection": "column",
            "height": 0,
            "justifyContent": "center",
            "left": 0,
            "maxHeight": "100%",
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "shadowOpacity": 0,
            "width": "100%",
            "zIndex": -1,
          }
        }
      />
    </View>
  </View>,
]
`;
